{"version":3,"sources":["db/0.jpg","db/1.jpg","db/2.jpg","Room.js","App.js","index.js"],"names":["module","exports","pictureSelector","index","p0","p1","p2","Room","match","history","location","useState","question","setQuestion","loadState","setloadState","useRef","current","loadStateRef","useEffect","i","crypto","pbkdf2","params","key","err","toString","data","Object","values","length","setTimeout","Card","style","width","CardHeader","Spinner","height","CardBody","CardText","CardImg","src","alt","renderSwitch","App","props","submitAction","e","preventDefault","inputRef","value","push","window","reload","state","React","createRef","Container","className","fluid","Row","exact","path","component","home","marginTop","Form","onSubmit","this","FormGroup","display","Input","type","innerRef","Button","marginLeft","Component","withRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e2fb5ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.42afa5f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.d29e90f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.3aace66e.jpg\";","import React, {useEffect, useState, useRef} from 'react';\r\nimport data from './db/firstjson';\r\nimport crypto from 'crypto';\r\nimport {Spinner, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, CardHeader} from 'reactstrap'\r\nimport p0 from './db/0.jpg'\r\nimport p1 from './db/1.jpg'\r\nimport p2 from './db/2.jpg'\r\n\r\nfunction pictureSelector(index) {\r\n    switch (index) {\r\n        case 0:\r\n            return p0;\r\n            break;\r\n        case 1:\r\n            return p1;\r\n            break;\r\n        case 2:\r\n            return p2;\r\n            break;\r\n    }\r\n}\r\n\r\nfunction Room({match,history,location}) {\r\n\r\n    const [question, setQuestion] = useState([]);\r\n    const [loadState, setloadState] = useState('');\r\n    const questionRef = useRef(question);\r\n    questionRef.current = question;\r\n    const loadStateRef = useRef(loadState);\r\n    loadStateRef.current = loadState;\r\n    useEffect(() => {\r\n        setloadState('loading');\r\n        for (let i = 0; i < data.length; i++) {\r\n            crypto.pbkdf2(match.params.key, 'greatroomescape', 213510, 64, 'sha512', (err, key) => {\r\n                if (key.toString('base64') === data[i].key) {\r\n                    setQuestion([...Object.values(data[i]), pictureSelector(data[i].index)]);\r\n                    setloadState('loaded');\r\n                }\r\n            })\r\n        }\r\n        setTimeout(() => {\r\n            if (loadStateRef.current === 'loading') {\r\n                setloadState('error');\r\n            }\r\n        }, 3000)\r\n    }, []);\r\n\r\n    const renderSwitch = (loadState) => {\r\n        switch (loadState) {\r\n            case `loading` :\r\n                return (\r\n                    <CardHeader><Spinner style={{width: '3rem', height: '3rem'}}/></CardHeader>\r\n                );\r\n            case `loaded` :\r\n                return (\r\n                    <>\r\n                        <CardHeader>\r\n                            <h1>{question[0]}.</h1>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <CardText>#hint : is.hanyang.ac.kr</CardText>\r\n                        </CardBody>\r\n                        <CardImg width={`100%`} src={question[3]} alt={`questionImg`}/>\r\n                        <CardBody>\r\n                            <CardText>{question[2]}</CardText>\r\n                        </CardBody>\r\n                    </>\r\n                );\r\n            case `error` :\r\n                return (\r\n                    <>\r\n                        <CardHeader>\r\n                            <h1>ERROR.</h1>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <CardText>\r\n                                Wrong Answer\r\n                            </CardText>\r\n                        </CardBody>\r\n                    </>\r\n                )\r\n\r\n        }\r\n    };\r\n    return (\r\n\r\n        <Card style={{width: `100%`}}>\r\n            {renderSwitch(loadState)}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Room;","import React from 'react';\nimport {useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link, withRouter} from \"react-router-dom\";\nimport Room from './Room'\nimport {Container, Row, Col} from 'reactstrap'\nimport {Button, Form, FormGroup, Input, Label} from 'reactstrap'\nimport {Card, CardBody, CardFooter} from 'reactstrap';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {key: 0};\n        this.inputRef = React.createRef();\n    }\n    submitAction = (e) => {\n        e.preventDefault();\n        let key = this.inputRef.current.value;\n        this.props.history.push(`/roomescape/${key}`);\n        window.location.reload();\n    };\n\n    render() {\n        return (\n            <Container className=\"themed-container\" fluid={`sm`}>\n                <Row>\n                    <Router>\n                        <Switch>\n                            <Route exact path={`/roomescape`} component={home}/>\n                            <Route exact path={`/roomescape/:key`} component={Room}/>\n                        </Switch>\n                    </Router>\n                </Row>\n                <Row>\n                    <Card style={{marginTop: `10px`, width: `100%`}}>\n                        <CardBody style={{height: `76px`}}>\n                            <Form onSubmit={this.submitAction}>\n                                <FormGroup>\n                                    <div style={{display: `flex`}}>\n                                        <Input type={`text`} innerRef={this.inputRef}\n                                               style={{display: `inlineblock`}}></Input>\n                                        <Button style={{marginLeft: `10px`}}>Submit</Button>\n                                    </div>\n                                </FormGroup>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nlet home = () => {\n    return (\n\n        <div>\n            <h1>방탈출게임에 오신것을 환영합니다.</h1>\n            <h2>'enter'을 입력하시고 첫번째 방으로 입장하세요</h2>\n        </div>\n    )\n}\n\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Router><App/></Router>\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}